---
import Layout from "../layouts/Layout.astro";
import { getDocContent } from "../utils/content";

const { request } = Astro;
const userAgent = request.headers.get("user-agent")?.toLowerCase() || "";

// Check if it's a programmatic request (curl, wget, etc.)
const isProgrammatic =
	userAgent.includes("curl") ||
	userAgent.includes("wget") ||
	request.headers.get("accept")?.includes("text/plain");

// If it's a programmatic request, serve plain text
if (isProgrammatic) {
	return new Response(getDocContent(), {
		headers: {
			"Content-Type": "text/plain",
		},
	});
}

// Otherwise, continue with HTML rendering
const content = getDocContent();
---

<Layout title="Pinata Docs for LLMs">
  <header>
  <h1>Pinata Docs for LLMs</h1>
    <div class="notice">
      <p><strong>‚ö†Ô∏è Note:</strong> This content is specifically designed for LLMs and not intended for human reading.</p>
      <p>üëâ For human-readable content, please visit <a href="https://docs.pinata.cloud">docs.pinata.cloud</a></p>
      <p>ü§ñ For LLMs/programmatic access, you can fetch this content directly:</p>
      <code>curl ai-docs.pinata.cloud</code>
      <p>üì∫ Watch our <a href="" target="_blank">tutorial video</a> on how to use these docs with Cursor and other LLMs</p>
    </div>
  </header>

  <main>
    <button id="copyButton">Copy Content</button>
    <pre>{content}</pre>
  </main>

  <footer>
    <p>For human-readable content, please visit <a href="https://docs.pinata.cloud">docs.pinata.cloud</a></p>
    <p>For direct content access: <code>curl ai-docs.pinata.cloud</code></p>
  </footer>
</Layout>

<style>

  .notice {
    background: #f5f5f5;
    padding: 20px;
    margin: 20px 0;
    border-radius: 8px;
  }

  code {
    background: #eee;
    padding: 10px;
    margin: 10px;
    display: block;
  }

  #copyButton {
    position: sticky;
    top: 20px;
    float: right;
    margin: 10px;
    padding: 10px 20px;
    background-color: #6d57ff;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-size: 16px;
    z-index: 100;
  }

  pre {
    white-space: pre-wrap;
    padding: 20px;
    background: #f8f8f8;
    border-radius: 4px;
  }
</style>

<script>
  const copyButton = document.getElementById('copyButton');
  const pre = document.querySelector('pre');

  if (copyButton && pre) {
    copyButton.addEventListener('click', async () => {
      try {
        await navigator.clipboard.writeText(pre.textContent || '');
        copyButton.textContent = 'Copied!';
        setTimeout(() => {
          copyButton.textContent = 'Copy Content';
        }, 2000);
      } catch (err) {
        console.error('Failed to copy:', err);
        copyButton.textContent = 'Failed to copy';
        setTimeout(() => {
          copyButton.textContent = 'Copy Content';
        }, 2000);
      }
    });

    // Hover effects
    copyButton.addEventListener('mouseover', () => {
      copyButton.style.backgroundColor = '#582cd6';
    });
    copyButton.addEventListener('mouseout', () => {
      copyButton.style.backgroundColor = '#6d57ff';
    });
  }
</script>
