---
import Layout from "../layouts/Layout.astro";
import { getFilesContent } from "../utils/content";
import { Image } from "astro:assets";
import logo from "../assets/logo.png";

const { request } = Astro;
const userAgent = request.headers.get("user-agent")?.toLowerCase() || "";

const isProgrammatic =
	userAgent.includes("curl") ||
	userAgent.includes("wget") ||
	request.headers.get("accept")?.includes("text/plain");

if (isProgrammatic) {
	const text = await getFilesContent();
	return new Response(text, {
		headers: {
			"Content-Type": "text/plain",
		},
	});
}

const content = await getFilesContent();
---

<Layout title="Pinata Docs for LLMs">
  <header>
  <Image src={logo} width={800} height={800} alt="logo" />
  <h1>Pinata Docs for LLMs</h1>
    <div class="notice">
      <p><strong>Note:</strong> This content is specifically designed for LLMs and not intended for human reading.</p>
      <p>For human-readable content, please visit <a href="https://docs.pinata.cloud">docs.pinata.cloud</a></p>
      <p>For LLMs/programmatic access, you can fetch this content directly:</p>
      <code>curl ai-docs.pinata.cloud</code>
      <p>Read our <a href="" target="_blank">tutorial</a> on how to use these docs with Cursor and other LLMs</p>
    </div>
  </header>

  <main>
    <button id="copyButton">Copy</button>
    <pre>{content}</pre>
  </main>

  <footer>
    <p>For human-readable content, please visit <a href="https://docs.pinata.cloud">docs.pinata.cloud</a></p>
    <p>For direct content access: <code>curl ai-docs.pinata.cloud</code></p>
  </footer>
</Layout>

<style>

  img {
    height: 200px;
    width: 200px;
    margin: 0 auto;
    display: block;
  }

  h1 {
    text-align: center;
  }

  .notice {
    margin: 20px 0;
    border-radius: 8px;
  }

  code {
    background: #f8f8f8;
    padding: 10px;
    display: block;
  }

  #copyButton {
    position: sticky;
    top: 20px;
    float: right;
    margin: 10px;
    padding: 5px 10px;
    background-color: black;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-size: 16px;
    z-index: 100;
  }

  pre {
    white-space: pre-wrap;
    padding: 20px;
    background: #f8f8f8;
    border-radius: 4px;
  }
</style>

<script>
  const copyButton = document.getElementById('copyButton');
  const pre = document.querySelector('pre');

  if (copyButton && pre) {
    copyButton.addEventListener('click', async () => {
      try {
        await navigator.clipboard.writeText(pre.textContent || '');
        copyButton.textContent = 'Copied!';
        setTimeout(() => {
          copyButton.textContent = 'Copy';
        }, 2000);
      } catch (err) {
        console.error('Failed to copy:', err);
        copyButton.textContent = 'Failed to copy';
        setTimeout(() => {
          copyButton.textContent = 'Copy';
        }, 2000);
      }
    });

    // Hover effects
    copyButton.addEventListener('mouseover', () => {
      copyButton.style.backgroundColor = '#232323';
    });
    copyButton.addEventListener('mouseout', () => {
      copyButton.style.backgroundColor = '#000000';
    });
  }
</script>
